{"ast":null,"code":"import _classCallCheck from \"/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/src/components/Game/Game.js\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper/Wrapper\";\nimport FriendsCard from \"../FriendsCard/FriendsCard.js\";\nimport friends from \"../../friends.json\";\nimport Scoreboard from \"../Scoreboard/Scoreboard.js\"; // shuffle upon each click\n\nfunction shuffle(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showAlert: 0,\n      showSuccess: 0,\n      score: 0,\n      topScore: 0,\n      friends: friends,\n      clickedfriends: []\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        score: _this.state.score + 1\n      });\n    };\n\n    _this.makeShuffle = function () {\n      _this.setState({\n        friends: shuffle(friends)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"clickedImage\",\n    value: function clickedImage(id) {\n      console.log(\"clicked\");\n      var clickedfriends = this.state.clickedfriends;\n      var score = this.state.score;\n      var topScore = this.state.topScore;\n      this.setState({\n        clickedfriends: this.state.clickedfriends(id)\n      }); // if the clicked image has an id of the indexed images\n\n      if (this.state.clickedfriends.indexOf(id) === -1) {\n        // push that id into the array to be stored\n        this.state.clickedfriends.push(id);\n        console.log(this.state.clickedfriends); // run the score function\n\n        this.handleIncrement(); // run the reshuffle function after each click\n\n        this.makeShuffle();\n      } else if (this.state.score === 12) {\n        // alert player wins\n        this.setState({\n          showSuccess: 1,\n          score: 0,\n          clickedfriends: []\n        });\n      } else {\n        // alert player loss\n        this.setState({\n          score: 0,\n          clickedfriends: []\n        });\n        console.log(\"duplicate\");\n      }\n\n      if (this.state.score > this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Scoreboard, {\n        title: \"Simpsons Clicky Game\",\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.friends.map(function (friend) {\n        return React.createElement(FriendsCard, {\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          clickedImage: _this2.clickedImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/davidmclaughlin/Desktop/CWRU Homework/homework3-19-19/Clicky-Game/my-app/src/components/Game/Game.js"],"names":["React","Wrapper","FriendsCard","friends","Scoreboard","shuffle","array","i","length","j","Math","floor","random","Game","state","showAlert","showSuccess","score","topScore","clickedfriends","handleIncrement","setState","makeShuffle","id","console","log","indexOf","push","map","friend","name","image","clickedImage","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper/Wrapper\";\nimport FriendsCard from \"../FriendsCard/FriendsCard.js\";\nimport friends from \"../../friends.json\"\nimport Scoreboard from \"../Scoreboard/Scoreboard.js\";\n\n// shuffle upon each click\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass Game extends React.Component {\n\n  state = {\n    showAlert: 0,\n    showSuccess: 0,\n    score: 0,\n    topScore: 0,\n    friends,\n    clickedfriends: [],\n  };\n\n  clickedImage(id){\n    console.log(\"clicked\");\n    let clickedfriends = this.state.clickedfriends;\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    this.setState({clickedfriends: this.state.clickedfriends(id)});\n\n    // if the clicked image has an id of the indexed images\n    if (this.state.clickedfriends.indexOf(id) === -1) {\n      // push that id into the array to be stored\n      this.state.clickedfriends.push(id);\n      console.log(this.state.clickedfriends);\n      // run the score function\n      this.handleIncrement();\n      // run the reshuffle function after each click\n      this.makeShuffle();\n    } else if (this.state.score === 12) {\n      // alert player wins\n      this.setState({\n        showSuccess: 1,\n        score: 0,\n        clickedfriends: []\n      });\n    } else {\n      // alert player loss\n      this.setState({\n        score: 0,\n        clickedfriends: []\n      });\n      console.log(\"duplicate\");\n      \n    }\n\n    if (this.state.score > this.state.topScore) {\n      this.setState({\n        topScore: this.state.score\n      });\n    }\n  };\n\n\n  handleIncrement = () => {\n\n    this.setState({ score: this.state.score + 1 });\n  };\n\n   // shuffle up images\n   makeShuffle = () => {\n    this.setState({ friends: shuffle(friends) });\n  };\n\n  render() {\n    return (\n      <div>\n        <Scoreboard\n          title=\"Simpsons Clicky Game\"\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n\n        <Wrapper>\n\n          {this.state.friends.map(friend => (\n            <FriendsCard\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n              clickedImage={this.clickedImage}\n\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n  }\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}